stages:
  - test
  # - build

test:
  tags:
    - runner-tag

  stage: test
  # This file is a template, and might need editing before it works on your project.
  # Official language image. Look for the different tagged releases at:
  # https://hub.docker.com/r/library/python/tags/
  image: python:latest

  # Change pip's cache directory to be inside the project directory since we can
  # only cache local items.
  # variables:
  #   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # Pip's cache doesn't store the python packages
  # https://pip.pypa.io/en/stable/reference/pip_install/#caching
  #
  # If you want to also cache the installed packages, you have to install
  # them in a virtualenv and cache it as well.
  # cache:
  #   paths:
  #     - .cache/pip
  #     - venv/

  before_script:
    - python3 -V  # Print out python version for debugging
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install -r requirements.txt


  script:
      - python3 -m unittest


# build:
#   tags:
#     - runner-tag
#   stage: build
#   image: python:latest
#   # before_script:
#   #   - docker login -u paglipay -p $CI_REGISTRY_PASSWORD  
#   # before_script:
#   #   - git remote set-url origin https://root:S8Aw7r2nQWKLxbxPR-Ar@corp.paglipay.info/root/feedback-loop
#   #   - git config --global user.email 'paglipay@gmail.com'
#   #   - git config --global user.name 'paglipay'
#   script: 
#     - echo "Start building App"
#     - pwd
#     - ls -la
#     # - git checkout -B branch
#     # do the file changes here
#     - echo "running python script"
#     - python3 app.py
#     # - git checkout master
#     # - git push origin master
#     # - touch branch.txt
#     # - echo 'hi' >> branch.txt
#     # - git add -A
#     # - git commit -m '[skip ci] commit from CI runner'
#     # - git push --follow-tags origin branch
